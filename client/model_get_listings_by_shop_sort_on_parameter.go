/*
Etsy Open API v3

<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2024 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

API version: 3.0.0
Contact: developers@etsy.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goEtsy

import (
	"encoding/json"
	"fmt"
)

// GetListingsByShopSortOnParameter The value to sort a search result of listings on. NOTES: a) `sort_on` only works when combined with one of the search options (keywords, region, etc.). b) when using `score` the returned results will always be in _descending_ order, regardless of the `sort_order` parameter.
type GetListingsByShopSortOnParameter string

// List of getListingsByShop_sort_on_parameter
const (
	GETLISTINGSBYSHOPSORTONPARAMETER_CREATED GetListingsByShopSortOnParameter = "created"
	GETLISTINGSBYSHOPSORTONPARAMETER_PRICE   GetListingsByShopSortOnParameter = "price"
	GETLISTINGSBYSHOPSORTONPARAMETER_UPDATED GetListingsByShopSortOnParameter = "updated"
	GETLISTINGSBYSHOPSORTONPARAMETER_SCORE   GetListingsByShopSortOnParameter = "score"
)

// All allowed values of GetListingsByShopSortOnParameter enum
var AllowedGetListingsByShopSortOnParameterEnumValues = []GetListingsByShopSortOnParameter{
	"created",
	"price",
	"updated",
	"score",
}

func (v *GetListingsByShopSortOnParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetListingsByShopSortOnParameter(value)
	for _, existing := range AllowedGetListingsByShopSortOnParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetListingsByShopSortOnParameter", value)
}

// NewGetListingsByShopSortOnParameterFromValue returns a pointer to a valid GetListingsByShopSortOnParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetListingsByShopSortOnParameterFromValue(v string) (*GetListingsByShopSortOnParameter, error) {
	ev := GetListingsByShopSortOnParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetListingsByShopSortOnParameter: valid values are %v", v, AllowedGetListingsByShopSortOnParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetListingsByShopSortOnParameter) IsValid() bool {
	for _, existing := range AllowedGetListingsByShopSortOnParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to getListingsByShop_sort_on_parameter value
func (v GetListingsByShopSortOnParameter) Ptr() *GetListingsByShopSortOnParameter {
	return &v
}

type NullableGetListingsByShopSortOnParameter struct {
	value *GetListingsByShopSortOnParameter
	isSet bool
}

func (v NullableGetListingsByShopSortOnParameter) Get() *GetListingsByShopSortOnParameter {
	return v.value
}

func (v *NullableGetListingsByShopSortOnParameter) Set(val *GetListingsByShopSortOnParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableGetListingsByShopSortOnParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableGetListingsByShopSortOnParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetListingsByShopSortOnParameter(val *GetListingsByShopSortOnParameter) *NullableGetListingsByShopSortOnParameter {
	return &NullableGetListingsByShopSortOnParameter{value: val, isSet: true}
}

func (v NullableGetListingsByShopSortOnParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetListingsByShopSortOnParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
