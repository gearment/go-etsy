/*
Etsy Open API v3

Testing ShopReceiptTransactionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goEtsy

import (
	"context"
	"testing"

	openapiclient "github.com/gearment/go-etsy/client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_goEtsy_ShopReceiptTransactionsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ShopReceiptTransactionsAPIService GetShopReceiptTransaction", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var transactionId int64

		resp, httpRes, err := apiClient.ShopReceiptTransactionsAPI.GetShopReceiptTransaction(context.Background(), shopId, transactionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopReceiptTransactionsAPIService GetShopReceiptTransactionsByListing", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var listingId int64

		resp, httpRes, err := apiClient.ShopReceiptTransactionsAPI.GetShopReceiptTransactionsByListing(context.Background(), shopId, listingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopReceiptTransactionsAPIService GetShopReceiptTransactionsByReceipt", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var receiptId int64

		resp, httpRes, err := apiClient.ShopReceiptTransactionsAPI.GetShopReceiptTransactionsByReceipt(context.Background(), shopId, receiptId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopReceiptTransactionsAPIService GetShopReceiptTransactionsByShop", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64

		resp, httpRes, err := apiClient.ShopReceiptTransactionsAPI.GetShopReceiptTransactionsByShop(context.Background(), shopId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
