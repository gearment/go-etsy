/*
Etsy Open API v3

Testing ShopListingImageAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goEtsy

import (
	"context"
	"testing"

	openapiclient "github.com/gearment/go-etsy/client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_goEtsy_ShopListingImageAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ShopListingImageAPIService DeleteListingImage", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var listingId int64
		var listingImageId int64

		httpRes, err := apiClient.ShopListingImageAPI.DeleteListingImage(context.Background(), shopId, listingId, listingImageId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopListingImageAPIService GetListingImage", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var listingId int64
		var listingImageId int64

		resp, httpRes, err := apiClient.ShopListingImageAPI.GetListingImage(context.Background(), listingId, listingImageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopListingImageAPIService GetListingImageDeprecated", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var listingId int64
		var listingImageId int64

		resp, httpRes, err := apiClient.ShopListingImageAPI.GetListingImageDeprecated(context.Background(), shopId, listingId, listingImageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopListingImageAPIService GetListingImages", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var listingId int64

		resp, httpRes, err := apiClient.ShopListingImageAPI.GetListingImages(context.Background(), listingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopListingImageAPIService GetListingImagesDeprecated", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var listingId int64

		resp, httpRes, err := apiClient.ShopListingImageAPI.GetListingImagesDeprecated(context.Background(), shopId, listingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShopListingImageAPIService UploadListingImage", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var shopId int64
		var listingId int64

		resp, httpRes, err := apiClient.ShopListingImageAPI.UploadListingImage(context.Background(), shopId, listingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
